# https://taskfile.dev

version: '2'

tasks:

  # initialize this image
  init:
    cmds:
      - task: build
      - task: init:netboot

  # build the 'containered_pxe' docker-image
  build:
    cmds:
      - docker build . -t containered_pxe

  # force the rebuild of the 'containered_pxe' docker-image
  rebuild:
    cmds:
      - docker build . -t containered_pxe --no-cache


  # run the 'containered_pxe' docker-image in detached mode
  run:
    cmds:
      - cmd: docker stop pxe
        ignore_error: true
      - docker run --name pxe --cap-add=NET_ADMIN --net=host -d --rm -v $PWD/../ansible_hosts:/etc/ansible/hosts -v $PWD/containerdata:/container -v $PWD/../key.pub:/key/key.pub containered_pxe

  # run the 'containered_pxe' docker-image in debug mode
  run:debug:
    cmds:
      - docker run --name pxe --cap-add=NET_ADMIN --net=host -it --rm -v $PWD/../ansible_hosts:/etc/ansible/hosts -v $PWD/containerdata:/container -v $PWD/../key.pub:/key/key.pub containered_pxe bash -c "/start.sh && service nginx start && service php7.0-fpm start; echo 'run dnsmasq --no-daemon --log-queries --log-facility=/container/dnsmasq.log'; bash"

  # stop all 'containered_pxe' docker-containers
  stop:
    cmds:
      - docker stop pxe
      - docker rm pxe

  # get netinst-files for debian installation (only if not already there)
  init:netboot:
    cmds:
      - mkdir -p ./containerdata/web/netboot
      # static version: http://ftp.debian.org/debian/dists/buster/main/installer-amd64/20190702/images/netboot/netboot.tar.gz
      - cd ./containerdata/web/netboot; wget http://ftp.debian.org/debian/dists/buster/main/installer-amd64/current/images/netboot/netboot.tar.gz -O ./debian-netboot.tar.gz
      - cd ./containerdata/web/netboot; tar -xvzf ./debian-netboot.tar.gz
      - cd ./containerdata/web/netboot; rm ./debian-netboot.tar.gz
    status:
      - test -f ./containerdata/web/netboot/pxelinux.0